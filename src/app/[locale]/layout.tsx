import "bootstrap/dist/css/bootstrap.min.css";
import type { Metadata } from "next";
import { Geologica, Golos_Text, Lexend_Giga } from "next/font/google";
import React from "react";
import {notFound} from "next/navigation";
import {NextIntlClientProvider} from "next-intl";
import {routing} from "@/i18n/routing";
import {getMessages} from "next-intl/server";
import "../../styles/globals.css";
import ClientLayout from "@/components/client/ClientLayout";
import {fetchInfo} from "@/http/api/infoApi";

const geologica = Geologica({
  variable: "--geologica-font",
  subsets: ["cyrillic", "latin"],
});

const golosText = Golos_Text({
  variable: "--golos-text-font",
  subsets: ["cyrillic", "latin"],
});

const lexendGiga = Lexend_Giga({
  variable: "--lexend-giga-font",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "ALFA PAY",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children, params,
}: Readonly<{
  children: React.ReactNode;
  params: { locale: string };
}>) {

  const { locale } = await params;

  if (!routing.locales.includes(locale as any)) {
    notFound();
  }

  const messages = await getMessages();
  let info = null;
  try {
    info = await fetchInfo();
  } catch {}

  return (
    <html lang={locale}>
      <body
        className={`${lexendGiga.variable} ${golosText.variable} ${geologica.variable} antialiased`}
      >
        <NextIntlClientProvider messages={messages}>
          <ClientLayout info={info}>
            {children}
          </ClientLayout>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
